The connectivity driver of Swarm is named the \texttt{Hive}. The component decides which peers to make connections to by consulting the \texttt{Kademlia} for known but unconnected peers, and by invoking the \texttt{Discovery Protocol} to alert peers about changes in its peer database.

\subsection{Saturation and Depth}

In Swarm, a fully connected state is referred to as \emph{Saturation}.

A \emph{Proximity Bin} is saturated when it has at least \(2\) connected peers.

A \emph{node} is saturated if:

\begin{itemize}
\item it is connected to all existing peers in its neighborhood
\item all Proximity Bins farther away than Depth are saturated
\end{itemize}

In the context of the Hive, the \texttt{Depth} at any moment before or during a saturated condition is called \texttt{Saturation Depth}. This interpretation of \texttt{Depth} differs slightly from the \texttt{Neighborhood Depth} used for routing decisions. Specifically, it is the \texttt{Proximity Order} farthest from the \texttt{Neighborhood Depth} that is \emph{not} saturated. If no such bin exists, \texttt{Saturation Depth} is effectively the same as the \texttt{Neighborhood Depth}.

\subsection{Prioritizing connections}

A non-saturated node should seek connections with peers in the following order of priority:

\begin{enumerate}
\item the closest unconnected neighbors
\item the farthest bin that has the least connected peers
\end{enumerate}

\subsection{Retrying connections}

If a peer connection fails or is disconnected, the node MUST reconnect.

If the initial reconnection attempt fails, the node SHOULD exponentially increase the time it waits before retrying. The node's reconnection attempts SHOULD stay within the minimum bounds of the algorithm:

\begin{enumerate}
\item If more than 42 retries have been attempted, discard the peer and do not continue
\item Caluculate the time delta since last retry
\item Calculate the \emph{number of warranted retries} by subtracting $2$ from the $log_2$ of the time delta
\item Retry if the \emph{number of warranted retries} is higher than the number of retries that has been made
\end{enumerate}
